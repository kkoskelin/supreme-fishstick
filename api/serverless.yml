org: kkoskelin
app: supreme-fishstick
service: api
frameworkVersion: "3"

custom:
  tableName: "swim-records-${sls:stage}"

package:
  excludeDevDependencies: true

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [SwimEventsTable, Arn]
  environment:
    SWIM_RECORDS_DB: ${self:custom.tableName}

functions:
  api:
    handler: ./index.handler
    events:
      - httpApi: "*"

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    SwimEventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SwimEvents
        AttributeDefinitions:
          - AttributeName: entityType
            AttributeType: S
          - AttributeName: entityId
            AttributeType: S
          # - AttributeName: eventId
          #   AttributeType: N
          # - AttributeName: time
          #   AttributeType: N
          # - AttributeName: teamId
          #   AttributeType: N # Change the attribute type to number for teamId
        KeySchema:
          - AttributeName: entityType
            KeyType: HASH
          - AttributeName: entityId
            KeyType: RANGE
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 5 # Adjust according to your needs
        #   WriteCapacityUnits: 5 # Adjust according to your needs
        BillingMode: PAY_PER_REQUEST # Use on-demand capacity
